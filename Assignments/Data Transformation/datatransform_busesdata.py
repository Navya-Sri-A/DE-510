# -*- coding: utf-8 -*-
"""DataTransform_BusesData.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qxb2VUZOO7NyhjZsIqROjkVawf2Npcw4
"""

from google.colab import files
import pandas as pd
import os

uploaded = files.upload()

feb_df = pd.read_csv("bc_trip259172515_230215.csv")

print(f"Number of breadcrumb records : {len(feb_df)}")

print(f"\nThe complete Data Frame for Feb 15th 2023 : ")
feb_df.head()

drop_feb_df = feb_df.drop(columns=['EVENT_NO_STOP', 'GPS_SATELLITES', 'GPS_HDOP'])

print("\nThe Data Frame for Feb 15th 2023 after dropping the columns : ")
drop_feb_df.head()

filter_feb_df = pd.read_csv('bc_trip259172515_230215.csv', usecols=lambda col: col not in ['EVENT_NO_STOP', 'GPS_SATELLITES','GPS_HDOP' ])

print("\nThe Data Frame for Feb 15th 2023 after filtering the columns : ")
filter_feb_df.head()

filter_feb_df.info()

filter_feb_df['OPD_DATE'] = pd.to_datetime(filter_feb_df['OPD_DATE'], format='%d%b%Y:%H:%M:%S')
filter_feb_df['ACT_TIME'] = pd.to_timedelta(filter_feb_df['ACT_TIME'], unit='s')

filter_feb_df['TIMESTAMP'] = filter_feb_df['OPD_DATE'] + filter_feb_df['ACT_TIME']

filter_feb_df.info()

print("\nThe Data Frame for Feb 15th 2023 after adding the Time Stamp column : ")
filter_feb_df.head()

filter_feb_df = filter_feb_df.drop(columns=['OPD_DATE', 'ACT_TIME'])

print("\nThe Data Frame for Feb 15th 2023 after dropping the columns : ")
filter_feb_df.head()

filter_feb_df['dMETERS'] = filter_feb_df['METERS'].diff()
filter_feb_df['dTIMESTAMP'] = filter_feb_df['TIMESTAMP'].diff().dt.total_seconds()

filter_feb_df['SPEED'] = filter_feb_df.apply(lambda row: row['dMETERS'] / row['dTIMESTAMP'] if pd.notna(row['dTIMESTAMP']) else None, axis=1)
print(filter_feb_df.head())

print(f"\nThe minimum speed for Feb 15th 2023 : ",filter_feb_df['SPEED'].min())
print(f"\nThe maximum speed for Feb 15th 2023 : ",filter_feb_df['SPEED'].max())
print(f"\nThe average speed for Feb 15th 2023 : ",filter_feb_df['SPEED'].mean())

filter_feb_df = filter_feb_df.drop(columns=['dMETERS', 'dTIMESTAMP'])
print("\nThe Data Frame for Feb 15th 2023 after dropping the columns : ")
filter_feb_df.head()

filter_feb_df.describe()
